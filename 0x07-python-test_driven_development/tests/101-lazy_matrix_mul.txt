Test Cases for ``101-lazy_matrix_mul`` module
=======================================

This module implements doctest to run unittests on ```101-lazy_matrix_mul`` module

Usage
=====

Importing ``101-lazy_matrix_mul`` module
	>>> mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Testing with everything alright
	>>> a = [[1, 2, 3], [4, 7, 8], [47, 5, 2]]
	>>> b = [[1.7, 0.0], [4.6, 5], [1, 3]]
	>>> print(mul(a, b))
	[[ 13.9  19. ]
	 [ 47.   59. ]
         [104.9  31. ]]

Testing with incompatible matrices
	>>> a = [[1, 2], [4, 7], [47, 5]]
	>>> b = [[1.7, 0.0], [4.6, 5], [1, 3]]
	>>> print(mul(a, b))
	Traceback (most recent call last):
	...
	ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 3 is different from 2)

Testing with wrong types
	>>> a = ([1, 2, 3], [4, 7], [47, 5])
	>>> b = [[1.7, 0.0], [4.6, 5], [1, 3]]
	>>> print(mul(a, b))
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (3,) + inhomogeneous part.

	>>> a = [(1, 2), [4, 7], [47, 5]]
	>>> b = [[1.7, 0.0], [4.6, 5], [1, 3]]
	>>> print(mul(b, a))
	Traceback (most recent call last):
	...
	ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 3 is different from 2)

	>>> a = [[1, 'x'], [4, 7], [47, 5]]
	>>> b = [[1.7, 0.0], [4.6, 5], [1, 3]]
	>>> print(mul(a, b))
	Traceback (most recent call last):
	...
	numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('float64')) -> None

Testing with irregularly sized matrices
	>>> a = [[1, 2, 3], [4, 7, 8], [47, 5]]
	>>> b = [[1.7, 0.0], [4.6, 5], [1, 3]]
	>>> print(mul(a, b))
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (3,) + inhomogeneous part.

Testing with empty arguments
	>>> a = []
	>>> b = [[1, 2, 30]]
	>>> print(mul(a, b))
	Traceback (most recent call last):
	...
	ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

	>>> print(mul(b, a))
	Traceback (most recent call last):
	...
	ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 0 is different from 3)
